<?php

/**
 * @file
 * Contains playground.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\media\MediaInterface;
use Drupal\node\NodeInterface;

/**
 * Implements hook_media_update().
 */
function islandora_rdm_multifile_media_media_update(MediaInterface $media) {
  $media_source_service = \Drupal::service('islandora.media_source_service');

  // Exit early if nothing's changed.
  $utils = \Drupal::service('islandora.utils');
  if (!$utils->haveFieldsChanged($media, $media->original)) {
    return;
  };

  // Does it have a source field?
  $source_field = $media_source_service->getSourceFieldName($media->bundle());
  if (empty($source_field)) {
    return;
  }

  // Exit early if the source file did not change.
  if ($media->get($source_field)->equals($media->original->get($source_field))) {
    return;
  }
  // If it has a parent node...
  $node = $utils->getParentNode($media);
  if ($node) {
    // Fire off derivative reactions for the Media.
    $utils->executeMediaReactions('\Drupal\islandora\Plugin\ContextReaction\DerivativeFileReaction', $media);
  }
}

/**
 * Implements hook_ENTITYTYPE_postsave().
 */
function islandora_rdm_multifile_media_media_postsave(EntityInterface $media, $op) {

  $utils = \Drupal::service('islandora.utils');
  // Add derived file to the media.
  if ($op == 'insert') {
    $utils->executeMediaReactions('\Drupal\islandora_rdm_multifile_media\Plugin\ContextReaction\DerivativeFileReaction', $media);
  }

}

/**
 * Implements hook_entity_view_mode_alter().
 */
function islandora_rdm_multifile_media_entity_view_mode_alter(&$view_mode, EntityInterface $entity) {
  // Change the view mode based on user input from a 'view_mode_alter'
  // ContextReaction.
  $entity_type = $entity->getEntityType()->id();
  $storage = \Drupal::service('entity_type.manager')->getStorage('entity_view_mode');
  $context_manager = \Drupal::service('context.manager');
  $current_entity = \Drupal::routeMatch()->getParameter($entity_type);
  $current_id = ($current_entity instanceof MediaInterface) ? $current_entity->id() : NULL;
  if (isset($current_id) && $current_id == $entity->id()) {
    foreach ($context_manager->getActiveReactions('\Drupal\islandora\Plugin\ContextReaction\ViewModeAlterReaction') as $reaction) {
      // Construct the new view mode's machine name.
      $entity_type = $entity->getEntityTypeId();
      $mode = $reaction->execute();
      $machine_name = "$entity_type.$mode";

      // Try to load it.
      $new_mode = $storage->load($machine_name);

      // If successful, alter the view mode.
      if ($new_mode) {
        $view_mode = $mode;
      }
      else {
        // Otherwise, leave it be, but log a message.
        \Drupal::logger('islandora')
          ->info("EntityViewMode $machine_name does not exist.  View mode cannot be altered.");
      }
    }
  }
}
